name: E2E Tests

on:
  pull_request:
    paths:
      - "**/*.php"
      - "**/*.ts"
      - "**/*.tsx"
      - "**/*.css"

jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./src

    services:
      postgres:
        image: postgres:17.4
        env:
          POSTGRES_DB: postgres
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - "5432:5432"
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.4"

      - name: Cache Vendor
        id: cache-vendor
        uses: actions/cache@v4
        with:
          path: ./src/vendor
          key: ${{ runner.os }}-vendor-${{ hashFiles('./src/composer.lock') }}

      - name: Install Dependencies
        if: steps.cache-vendor.outputs.cache-hit != 'true'
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

      - name: Copy .env
        run: cp .env.example .env

      - name: Generate key
        run: php artisan key:generate

      - name: Migrate
        run: php artisan migrate
        env:
          DB_HOST: localhost
          DB_DATABASE: postgres
          DB_USERNAME: postgres
          DB_PASSWORD: postgres

      - name: Run Laravel Server
        run: php artisan serve &

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Cache Node Modules
        id: cache-node-modules
        uses: actions/cache@v4
        with:
          path: ./src/node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('./src/package-lock.json') }}

      - name: Install dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: npm ci

      - name: Build
        run: npm run build

      - name: Install Playwright Browsers
        run: npx playwright install chromium

      - name: Run Playwright tests
        run: npx playwright test --project=chromium --debug

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-results
          path: |
            ./src/test-results/
            ./src/*.png
          retention-days: 30