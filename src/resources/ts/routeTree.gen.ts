/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as GuestRouteImport } from './routes/_guest/route'
import { Route as AuthRouteImport } from './routes/_auth/route'
import { Route as AuthIndexImport } from './routes/_auth/index'
import { Route as GuestRegisterImport } from './routes/_guest/register'
import { Route as GuestLoginImport } from './routes/_guest/login'
import { Route as AuthUserIndexImport } from './routes/_auth/user/index'
import { Route as AuthUserCreateImport } from './routes/_auth/user/create'

// Create/Update Routes

const GuestRouteRoute = GuestRouteImport.update({
  id: '/_guest',
  getParentRoute: () => rootRoute,
} as any)

const AuthRouteRoute = AuthRouteImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const AuthIndexRoute = AuthIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthRouteRoute,
} as any)

const GuestRegisterRoute = GuestRegisterImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => GuestRouteRoute,
} as any)

const GuestLoginRoute = GuestLoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => GuestRouteRoute,
} as any)

const AuthUserIndexRoute = AuthUserIndexImport.update({
  id: '/user/',
  path: '/user/',
  getParentRoute: () => AuthRouteRoute,
} as any)

const AuthUserCreateRoute = AuthUserCreateImport.update({
  id: '/user/create',
  path: '/user/create',
  getParentRoute: () => AuthRouteRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRoute
    }
    '/_guest': {
      id: '/_guest'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof GuestRouteImport
      parentRoute: typeof rootRoute
    }
    '/_guest/login': {
      id: '/_guest/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof GuestLoginImport
      parentRoute: typeof GuestRouteImport
    }
    '/_guest/register': {
      id: '/_guest/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof GuestRegisterImport
      parentRoute: typeof GuestRouteImport
    }
    '/_auth/': {
      id: '/_auth/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthIndexImport
      parentRoute: typeof AuthRouteImport
    }
    '/_auth/user/create': {
      id: '/_auth/user/create'
      path: '/user/create'
      fullPath: '/user/create'
      preLoaderRoute: typeof AuthUserCreateImport
      parentRoute: typeof AuthRouteImport
    }
    '/_auth/user/': {
      id: '/_auth/user/'
      path: '/user'
      fullPath: '/user'
      preLoaderRoute: typeof AuthUserIndexImport
      parentRoute: typeof AuthRouteImport
    }
  }
}

// Create and export the route tree

interface AuthRouteRouteChildren {
  AuthIndexRoute: typeof AuthIndexRoute
  AuthUserCreateRoute: typeof AuthUserCreateRoute
  AuthUserIndexRoute: typeof AuthUserIndexRoute
}

const AuthRouteRouteChildren: AuthRouteRouteChildren = {
  AuthIndexRoute: AuthIndexRoute,
  AuthUserCreateRoute: AuthUserCreateRoute,
  AuthUserIndexRoute: AuthUserIndexRoute,
}

const AuthRouteRouteWithChildren = AuthRouteRoute._addFileChildren(
  AuthRouteRouteChildren,
)

interface GuestRouteRouteChildren {
  GuestLoginRoute: typeof GuestLoginRoute
  GuestRegisterRoute: typeof GuestRegisterRoute
}

const GuestRouteRouteChildren: GuestRouteRouteChildren = {
  GuestLoginRoute: GuestLoginRoute,
  GuestRegisterRoute: GuestRegisterRoute,
}

const GuestRouteRouteWithChildren = GuestRouteRoute._addFileChildren(
  GuestRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '': typeof GuestRouteRouteWithChildren
  '/login': typeof GuestLoginRoute
  '/register': typeof GuestRegisterRoute
  '/': typeof AuthIndexRoute
  '/user/create': typeof AuthUserCreateRoute
  '/user': typeof AuthUserIndexRoute
}

export interface FileRoutesByTo {
  '': typeof GuestRouteRouteWithChildren
  '/login': typeof GuestLoginRoute
  '/register': typeof GuestRegisterRoute
  '/': typeof AuthIndexRoute
  '/user/create': typeof AuthUserCreateRoute
  '/user': typeof AuthUserIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_auth': typeof AuthRouteRouteWithChildren
  '/_guest': typeof GuestRouteRouteWithChildren
  '/_guest/login': typeof GuestLoginRoute
  '/_guest/register': typeof GuestRegisterRoute
  '/_auth/': typeof AuthIndexRoute
  '/_auth/user/create': typeof AuthUserCreateRoute
  '/_auth/user/': typeof AuthUserIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '' | '/login' | '/register' | '/' | '/user/create' | '/user'
  fileRoutesByTo: FileRoutesByTo
  to: '' | '/login' | '/register' | '/' | '/user/create' | '/user'
  id:
    | '__root__'
    | '/_auth'
    | '/_guest'
    | '/_guest/login'
    | '/_guest/register'
    | '/_auth/'
    | '/_auth/user/create'
    | '/_auth/user/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AuthRouteRoute: typeof AuthRouteRouteWithChildren
  GuestRouteRoute: typeof GuestRouteRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  AuthRouteRoute: AuthRouteRouteWithChildren,
  GuestRouteRoute: GuestRouteRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_auth",
        "/_guest"
      ]
    },
    "/_auth": {
      "filePath": "_auth/route.tsx",
      "children": [
        "/_auth/",
        "/_auth/user/create",
        "/_auth/user/"
      ]
    },
    "/_guest": {
      "filePath": "_guest/route.tsx",
      "children": [
        "/_guest/login",
        "/_guest/register"
      ]
    },
    "/_guest/login": {
      "filePath": "_guest/login.tsx",
      "parent": "/_guest"
    },
    "/_guest/register": {
      "filePath": "_guest/register.tsx",
      "parent": "/_guest"
    },
    "/_auth/": {
      "filePath": "_auth/index.tsx",
      "parent": "/_auth"
    },
    "/_auth/user/create": {
      "filePath": "_auth/user/create.tsx",
      "parent": "/_auth"
    },
    "/_auth/user/": {
      "filePath": "_auth/user/index.tsx",
      "parent": "/_auth"
    }
  }
}
ROUTE_MANIFEST_END */
